name: CI/CD to ACR + ACI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  IMAGE_NAME: azure-devops-cicd-aci
  ACR_NAME: ${{ secrets.ACR_NAME }}
  ACR_LOGIN_SERVER: ${{ secrets.ACR_NAME }}.azurecr.io
  RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}
  ACI_NAME: ${{ secrets.ACI_NAME }}
  LOCATION: eastus

jobs:
  build-test-push-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps & run tests
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest
          pytest -q

      - name: Azure login (Service Principal)
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Login to ACR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build & push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:latest

      - name: Deploy Bicep to Resource Group (ACI)
        uses: azure/arm-deploy@v2
        with:
          scope: resourcegroup
          resourceGroupName: ${{ env.RESOURCE_GROUP }}
          template: iac/main.bicep
          parameters: |
            containerName=${{ env.ACI_NAME }}
            registryLoginServer=${{ env.ACR_LOGIN_SERVER }}
            imageName=${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
            registryUsername=${{ secrets.ACR_USERNAME }}
            registryPassword=${{ secrets.ACR_PASSWORD }}
            appEnv=prod
            appVersion=${{ github.sha }}
          failOnStdErr: false
